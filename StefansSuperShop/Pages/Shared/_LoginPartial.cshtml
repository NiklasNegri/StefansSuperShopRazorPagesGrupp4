@using Microsoft.AspNetCore.Identity
@using StefansSuperShop.Data.Entities;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = SignInManager.UserManager.Users.FirstOrDefault(u => u.UserName == User.Identity.Name);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li>
            <a class="nav-link text-dark">Logged in as @user.UserName</a>
        </li>
        <li>
            @*Need to get current User-Id to edit the current User.*@
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Index" asp-route-id="@user.Id" title="My Account"><i class="fa fa-user-o"></i>My Account</a>
        </li>
        <li>
            <a class="nav-link text-dark" asp-page="/Admin/Index" title="Admin"><i class="fa fa-user-o"></i>Admin</a>
        </li>
        <li>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Logout" title="Log out" asp-route-returnUrl="@Url.Page("/", new { area = "" })"><i class="fa fa-sign-out"></i>Log out</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register" title="Register"><i class="fa fa-user-plus"></i>Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" title="Login"><i class="fa fa-sign-in"></i>Login</a>
        </li>
    }
</ul>